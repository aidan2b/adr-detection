name: Build, Push, and Deploy

on:
  push:
    branches:
      - main
  release:
    types: [published]

jobs:
  docker_push:
    name: Push Docker image to multiple registries
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
      
      - name: Log in to Docker Hub
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: |
            aidan2b/adr-detection:latest
            ghcr.io/${{ github.repository }}
      
      - name: Build and push Docker images
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            REDDIT_CLIENT_ID=${{ secrets.REDDIT_CLIENT_ID }}
            REDDIT_CLIENT_SECRET=${{ secrets.REDDIT_CLIENT_SECRET }}

  R-CMD-check-deploy:
    name: R-CMD-check and Deploy to shinyapps.io
    runs-on: ubuntu-latest
    needs: docker_push
    steps:
      - uses: actions/checkout@v2
      - uses: r-lib/actions/setup-r@v2
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libcurl4-openssl-dev libxml2-dev libssl-dev
      - name: Install R packages
        run: |
          R -e 'install.packages(c("remotes", "covr"))'
      - name: Deploy to shinyapps.io
        run: |
          R -e 'rsconnect::setAccountInfo(name = "<ACCOUNT_NAME>", token = Sys.getenv("SHINYAPPS_TOKEN"), secret = Sys.getenv("SHINYAPPS_SECRET"))'
          R -e 'rsconnect::deployApp(appDir = "shinyapp/", appName = "your_app_name", account = "<ACCOUNT_NAME>")'
        env:
          SHINYAPPS_TOKEN: ${{ secrets.SHINYAPPS_TOKEN }}
          SHINYAPPS_SECRET: ${{ secrets.SHINYAPPS_SECRET }}
