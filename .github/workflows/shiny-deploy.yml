name: shiny-deploy

on:
  workflow_dispatch:
    inputs:
      medication:
        description: 'Enter medication name:'
        required: true

jobs:
  run_pipeline:
    name: Run Pipeline
    runs-on: [self-hosted, cml, gpu]  
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          lfs: true
      
      - name: Set up Git LFS
        run: |
          git lfs install
          git lfs fetch
          git lfs pull
      
      - name: List model directory and file size
        run: |
          ls -lh models/roberta-classifier
          ls -lh models/flair-ner

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      
      - name: Run pipeline
        run: |
          python run_pipeline.py
        env:
          MEDICATION_NAME: ${{ github.event.inputs.medication }}
          REDDIT_CLIENT_ID: ${{ secrets.REDDIT_CLIENT_ID }}
          REDDIT_CLIENT_SECRET: ${{ secrets.REDDIT_CLIENT_SECRET }}

  deploy_shiny:
    name: Deploy to shinyapps.io
    runs-on: [self-hosted, cml, gpu]   
    needs: run_pipeline
    steps:
      - uses: actions/checkout@v2

      - name: Deploy to shinyapps.io
        run: |
          R -e ".libPaths('$HOME/adr-detection/.R/library'); rsconnect::setAccountInfo(name = 'aidan2b', token = Sys.getenv('SHINYAPPS_TOKEN'), secret = Sys.getenv('SHINYAPPS_SECRET'))"
          R -e ".libPaths('$HOME/adr-detection/.R/library'); rsconnect::deployApp(appDir = 'shiny_app/', appName = 'adr-detection', account = 'aidan2b')"
        env:
          SHINYAPPS_TOKEN: ${{ secrets.SHINYAPPS_TOKEN }}
          SHINYAPPS_SECRET: ${{ secrets.SHINYAPPS_SECRET }}

      - name: Commit and push linked_data.csv
        run: |
          git add shiny_app/linked_data.csv
          git commit -m "Update linked_data.csv"
          git push



