name: shiny-deploy

on:
  workflow_dispatch:
    inputs:
      medication:
        description: 'Enter medication name:'
        required: true

jobs:
  run_pipeline:
    name: Run Pipeline
    runs-on: [self-hosted, cml, gpu]  
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          lfs: true
      
      - name: Set up Git LFS
        run: |
          git lfs install
          git lfs fetch
          git lfs pull
      
      - name: List model directory and file size
        run: |
          ls -lh models/roberta-classifier
          ls -lh models/flair-ner

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip --user
          pip install -r requirements.txt --user
          python -m spacy download en_core_web_md
      
      - name: Run pipeline
        run: |
          python run_pipeline.py
        env:
          MEDICATION_NAME: ${{ github.event.inputs.medication }}
          REDDIT_CLIENT_ID: ${{ secrets.REDDIT_CLIENT_ID }}
          REDDIT_CLIENT_SECRET: ${{ secrets.REDDIT_CLIENT_SECRET }}

  deploy_shiny:
  name: Deploy to shinyapps.io
  runs-on: [self-hosted, cml, gpu]  
  needs: run_pipeline
  steps:
    - uses: actions/checkout@v2
    
    - name: Deploy to shinyapps.io
      run: |
        R -e 'require(remotes)'
        R -e 'require(covr)'
        R -e 'require(rsconnect)'
        R -e 'require(RColorBrewer)'
        R -e 'require(Rcpp)'
        R -e 'require(RcppTOML)'
        R -e 'require(base64enc)'
        R -e 'require(bslib)'
        R -e 'require(cachem)'
        R -e 'require(cli)'
        R -e 'require(colorspace)'
        R -e 'require(commonmark)'
        R -e 'require(cpp11)'
        R -e 'require(crosstalk)'
        R -e 'require(data.table)'
        R -e 'require(dplyr)'
        R -e 'require(evaluate)'
        R -e 'require(fansi)'
        R -e 'require(farver)'
        R -e 'require(fontawesome)'
        R -e 'require(generics)'
        R -e 'require(ggplot2)'
        R -e 'require(glue)'
        R -e 'require(here)'
        R -e 'require(highr)'
        R -e 'require(htmlwidgets)'
        R -e 'require(httpuv)'
        R -e 'require(knitr)'
        R -e 'require(later)'
        R -e 'require(plotly)'
        R -e 'require(png)'
        R -e 'require(promises)'
        R -e 'require(purrr)'
        R -e 'require(reticulate)'
        R -e 'require(shiny)'
        R -e 'require(shinyWidgets)'
        R -e 'require(tidyr)'
        R -e 'require(tibble)'
        R -e 'require(htmltools)'
        R -e 'rsconnect::setAccountInfo(name = "aidan2b", token = Sys.getenv("SHINYAPPS_TOKEN"), secret = Sys.getenv("SHINYAPPS_SECRET"))'
        R -e 'rsconnect::deployApp(appDir = "shiny_app/", appName = "adr-detection", account = "aidan2b")'
      env:
        SHINYAPPS_TOKEN: ${{ secrets.SHINYAPPS_TOKEN }}
        SHINYAPPS_SECRET: ${{ secrets.SHINYAPPS_SECRET }}

